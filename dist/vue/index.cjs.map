{"version":3,"sources":["../../src/vue/index.ts","../../src/vue/utils.ts"],"sourcesContent":["import type { Ref } from \"vue\";\r\nimport type { VueDragAndDropData, VueParentConfig } from \"./types\";\r\nimport { dragAndDrop as initParent, isBrowser, tearDown } from \"../index\";\r\nimport { onUnmounted, ref } from \"vue\";\r\nimport { handleVueElements } from \"./utils\";\r\nexport * from \"./types\";\r\n\r\n/**\r\n * Global store for parent els to values.\r\n */\r\nconst parentValues: WeakMap<HTMLElement, Ref<Array<any>> | Array<any>> =\r\n  new WeakMap();\r\n\r\n/**\r\n * Returns the values of the parent element.\r\n *\r\n * @param parent - The parent element.\r\n *\r\n * @returns The values of the parent element.\r\n */\r\nfunction getValues(parent: HTMLElement): Array<any> {\r\n  const values = parentValues.get(parent);\r\n\r\n  if (!values) {\r\n    console.warn(\"No values found for parent element\");\r\n\r\n    return [];\r\n  }\r\n\r\n  return \"value\" in values ? values.value : values;\r\n}\r\n\r\n/**\r\n * Sets the values of the parent element.\r\n *\r\n * @param parent - The parent element.\r\n *\r\n * @param newValues - The new values for the parent element.\r\n *\r\n * @returns void\r\n */\r\nfunction setValues(newValues: Array<any>, parent: HTMLElement): void {\r\n  const currentValues = parentValues.get(parent);\r\n\r\n  // Only update reactive values. If static, let's not update.\r\n  if (currentValues && \"value\" in currentValues)\r\n    currentValues.value = newValues;\r\n  //else if (currentValues) parentValues.set(parent, newValues);\r\n}\r\n/**\r\n * Entry point for Vue drag and drop.\r\n *\r\n * @param data - The drag and drop configuration.\r\n *\r\n * @returns void\r\n */\r\nexport function dragAndDrop<T>(\r\n  data: VueDragAndDropData<T> | Array<VueDragAndDropData<T>>\r\n): void {\r\n  if (!isBrowser) return;\r\n\r\n  if (!Array.isArray(data)) data = [data];\r\n\r\n  data.forEach((dnd) => {\r\n    const { parent, values, ...rest } = dnd;\r\n\r\n    handleVueElements(parent, handleParent(rest, values));\r\n  });\r\n}\r\n\r\n/**\r\n * Creates a new instance of drag and drop and returns the parent element and\r\n * a ref of the values to use in your template.\r\n *\r\n * @param initialValues - The initial values of the parent element.\r\n *\r\n * @returns The parent element and values for drag and drop.\r\n */\r\nexport function useDragAndDrop<T>(\r\n  initialValues: T[],\r\n  options: Partial<VueParentConfig<T>> = {}\r\n): [\r\n  Ref<HTMLElement | undefined>,\r\n  Ref<T[]>,\r\n  (config: Partial<VueParentConfig<T>>) => void\r\n] {\r\n  const parent = ref<HTMLElement | undefined>();\r\n\r\n  const values = ref(initialValues) as Ref<T[]>;\r\n\r\n  function updateConfig(config: Partial<VueParentConfig<T>> = {}) {\r\n    dragAndDrop({ parent, values, ...config });\r\n  }\r\n\r\n  dragAndDrop({ parent, values, ...options });\r\n\r\n  onUnmounted(() => parent.value && tearDown(parent.value));\r\n\r\n  return [parent, values, updateConfig];\r\n}\r\n\r\n/**\r\n * Sets the HTMLElement parent to weakmap with provided values and calls\r\n * initParent.\r\n *\r\n * @param config - The config of the parent.\r\n *\r\n * @param values - The values of the parent element.\r\n *\r\n */\r\nfunction handleParent<T>(\r\n  config: Partial<VueParentConfig<T>>,\r\n  values: Ref<Array<T>> | Array<T>\r\n) {\r\n  return (parent: HTMLElement) => {\r\n    parentValues.set(parent, values);\r\n\r\n    initParent({\r\n      parent,\r\n      getValues,\r\n      setValues,\r\n      config: {\r\n        ...config,\r\n      },\r\n    });\r\n  };\r\n}\r\n","import type { VueElement } from \"./types\";\r\nimport { watch } from \"vue\";\r\n\r\n/**\r\n * Checks if the given parent is an HTMLElement.\r\n *\r\n * @param dnd - The drag and drop configuration.\r\n */\r\nexport function getEl(parent: VueElement): HTMLElement | void {\r\n  if (parent instanceof HTMLElement) return parent;\r\n  else if (parent.value instanceof HTMLElement) return parent.value;\r\n  else if (\"$el\" in parent && parent.$el instanceof HTMLElement)\r\n    return parent.$el;\r\n}\r\n\r\nexport function handleVueElements(\r\n  elements: Array<VueElement> | VueElement,\r\n  cb: (el: HTMLElement) => void\r\n): void {\r\n  if (!Array.isArray(elements)) elements = [elements];\r\n\r\n  for (const element of elements) {\r\n    const validEl = getEl(element);\r\n\r\n    if (validEl) return cb(validEl);\r\n\r\n    const stop = watch(element, (newEl) => {\r\n      if (!newEl) return;\r\n\r\n      const validEl = getEl(newEl);\r\n\r\n      !validEl ? console.warn(\"Invalid parent element\", newEl) : cb(validEl);\r\n\r\n      stop();\r\n    });\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,eAA+D;AAC/D,IAAAA,cAAiC;;;ACFjC,iBAAsB;AAOf,SAAS,MAAM,QAAwC;AAC5D,MAAI,kBAAkB,YAAa,QAAO;AAAA,WACjC,OAAO,iBAAiB,YAAa,QAAO,OAAO;AAAA,WACnD,SAAS,UAAU,OAAO,eAAe;AAChD,WAAO,OAAO;AAClB;AAEO,SAAS,kBACd,UACA,IACM;AACN,MAAI,CAAC,MAAM,QAAQ,QAAQ,EAAG,YAAW,CAAC,QAAQ;AAElD,aAAW,WAAW,UAAU;AAC9B,UAAM,UAAU,MAAM,OAAO;AAE7B,QAAI,QAAS,QAAO,GAAG,OAAO;AAE9B,UAAM,WAAO,kBAAM,SAAS,CAAC,UAAU;AACrC,UAAI,CAAC,MAAO;AAEZ,YAAMC,WAAU,MAAM,KAAK;AAE3B,OAACA,WAAU,QAAQ,KAAK,0BAA0B,KAAK,IAAI,GAAGA,QAAO;AAErE,WAAK;AAAA,IACP,CAAC;AAAA,EACH;AACF;;;AD1BA,IAAM,eACJ,oBAAI,QAAQ;AASd,SAAS,UAAU,QAAiC;AAClD,QAAM,SAAS,aAAa,IAAI,MAAM;AAEtC,MAAI,CAAC,QAAQ;AACX,YAAQ,KAAK,oCAAoC;AAEjD,WAAO,CAAC;AAAA,EACV;AAEA,SAAO,WAAW,SAAS,OAAO,QAAQ;AAC5C;AAWA,SAAS,UAAU,WAAuB,QAA2B;AACnE,QAAM,gBAAgB,aAAa,IAAI,MAAM;AAG7C,MAAI,iBAAiB,WAAW;AAC9B,kBAAc,QAAQ;AAE1B;AAQO,SAAS,YACd,MACM;AACN,MAAI,CAAC,mBAAW;AAEhB,MAAI,CAAC,MAAM,QAAQ,IAAI,EAAG,QAAO,CAAC,IAAI;AAEtC,OAAK,QAAQ,CAAC,QAAQ;AACpB,UAAM,EAAE,QAAQ,QAAQ,GAAG,KAAK,IAAI;AAEpC,sBAAkB,QAAQ,aAAa,MAAM,MAAM,CAAC;AAAA,EACtD,CAAC;AACH;AAUO,SAAS,eACd,eACA,UAAuC,CAAC,GAKxC;AACA,QAAM,aAAS,iBAA6B;AAE5C,QAAM,aAAS,iBAAI,aAAa;AAEhC,WAAS,aAAa,SAAsC,CAAC,GAAG;AAC9D,gBAAY,EAAE,QAAQ,QAAQ,GAAG,OAAO,CAAC;AAAA,EAC3C;AAEA,cAAY,EAAE,QAAQ,QAAQ,GAAG,QAAQ,CAAC;AAE1C,+BAAY,MAAM,OAAO,aAAS,mBAAS,OAAO,KAAK,CAAC;AAExD,SAAO,CAAC,QAAQ,QAAQ,YAAY;AACtC;AAWA,SAAS,aACP,QACA,QACA;AACA,SAAO,CAAC,WAAwB;AAC9B,iBAAa,IAAI,QAAQ,MAAM;AAE/B,iBAAAC,aAAW;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,QACN,GAAG;AAAA,MACL;AAAA,IACF,CAAC;AAAA,EACH;AACF;","names":["import_vue","validEl","initParent"]}